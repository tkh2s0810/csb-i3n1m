{"version":3,"sources":["src/index.js"],"names":["onClickAdd","inputText","document","getElementById","value","div","createElement","className","li","innerText","completeButton","addEventListener","completeTarget","parentNode","backButton","backTarget","removeChild","appendChild","deleteButton","deleteTarget"],"mappings":";;;AAgEA,aAhEA,QAAA,gBAEA,IAAMA,EAAa,WAEXC,IAAAA,EAAYC,SAASC,eAAe,YAAYC,MACtDF,SAASC,eAAe,YAAYC,MAAQ,GAGtCC,IAAAA,EAAMH,SAASI,cAAc,OACnCD,EAAIE,UAAY,WAGVC,IAAAA,EAAKN,SAASI,cAAc,MAClCE,EAAGC,UAAYR,EAGTS,IAAAA,EAAiBR,SAASI,cAAc,UAC9CI,EAAeD,UAAY,KAC3BC,EAAeC,iBAAiB,QAAS,WACjCC,IAAAA,EAAiBF,EAAeG,WAGhCC,EAAaZ,SAASI,cAAc,UAC1CQ,EAAWL,UAAY,KACvBK,EAAWH,iBAAiB,QAAS,WAC7BI,IAAAA,EAAaD,EAAWD,WAI9BX,SAASC,eAAe,iBAAiBa,YAAYD,GACrDA,EAAWC,YAAYF,GACvBC,EAAWE,YAAYP,GACvBK,EAAWE,YAAYC,GAEvBhB,SAASC,eAAe,mBAAmBc,YAAYF,KAIzDb,SAASC,eAAe,mBAAmBa,YAAYJ,GACvDA,EAAeI,YAAYN,GAC3BE,EAAeI,YAAYE,GAC3BN,EAAeK,YAAYH,GAE3BZ,SAASC,eAAe,iBAAiBc,YAAYL,KAIjDM,IAAAA,EAAehB,SAASI,cAAc,UAC5CY,EAAaT,UAAY,KACzBS,EAAaP,iBAAiB,QAAS,WAE/BQ,IAAAA,EAAeD,EAAaL,WAClCX,SAASC,eAAe,mBAAmBa,YAAYG,KAIzDd,EAAIY,YAAYT,GAChBH,EAAIY,YAAYP,GAChBL,EAAIY,YAAYC,GAGhBhB,SAASC,eAAe,mBAAmBc,YAAYZ,IAGzDH,SACGC,eAAe,cACfQ,iBAAiB,QAAS,WAAMX,OAAAA","file":"src.83fec41a.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\n\nconst onClickAdd = () => {\n  // テキストボックスの値を取得し、初期化する\n  const inputText = document.getElementById(\"add-text\").value;\n  document.getElementById(\"add-text\").value = \"\";\n\n  //div生成\n  const div = document.createElement(\"div\");\n  div.className = \"list-row\";\n\n  // liタグ\n  const li = document.createElement(\"li\");\n  li.innerText = inputText;\n\n  // button(完了)タグ生成\n  const completeButton = document.createElement(\"button\");\n  completeButton.innerText = \"完了\";\n  completeButton.addEventListener(\"click\", () => {\n    const completeTarget = completeButton.parentNode;\n\n    // 戻すボタンの生成\n    const backButton = document.createElement(\"button\");\n    backButton.innerText = \"戻す\";\n    backButton.addEventListener(\"click\", () => {\n      const backTarget = backButton.parentNode;\n\n      // 未完了のODOへ要素を追加\n\n      document.getElementById(\"complete-list\").removeChild(backTarget);\n      backTarget.removeChild(backButton);\n      backTarget.appendChild(completeButton);\n      backTarget.appendChild(deleteButton);\n\n      document.getElementById(\"incomplete-list\").appendChild(backTarget);\n    });\n\n    // 完了したTODOへ要素を追加\n    document.getElementById(\"incomplete-list\").removeChild(completeTarget);\n    completeTarget.removeChild(completeButton);\n    completeTarget.removeChild(deleteButton);\n    completeTarget.appendChild(backButton);\n\n    document.getElementById(\"complete-list\").appendChild(completeTarget);\n  });\n\n  // button(削除)タグ生成\n  const deleteButton = document.createElement(\"button\");\n  deleteButton.innerText = \"削除\";\n  deleteButton.addEventListener(\"click\", () => {\n    // 押された削除ボタンの親タグ(div)を未完了リストから削除\n    const deleteTarget = deleteButton.parentNode;\n    document.getElementById(\"incomplete-list\").removeChild(deleteTarget);\n  });\n\n  // divタグの子要素に各要素を設定\n  div.appendChild(li);\n  div.appendChild(completeButton);\n  div.appendChild(deleteButton);\n\n  // 未完了のlistに追加\n  document.getElementById(\"incomplete-list\").appendChild(div);\n};\n\ndocument\n  .getElementById(\"add-button\")\n  .addEventListener(\"click\", () => onClickAdd());\n"]}